// Prueba 1: Verificación del método VerificarRespuestas utilizando JUnit y Mockito//


package org.example;

import javafx.scene.control.TextField;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class CrucigramaTest {

    private Crucigrama crucigrama;

    @BeforeEach
    public void setUp() {
        crucigrama = new Crucigrama();
        // Inicializar JavaFX Toolkit (necesario para pruebas de GUI)
        javafx.embed.swing.JFXPanel jfxPanel = new javafx.embed.swing.JFXPanel();
    }

    @Test
    public void testVerificarRespuestas_TodasCorrectas() {
        // Mock del objeto currentCrucigrama
        Object[][] mockCrucigrama = {
                {"A", true}, {"B", false}, {"C", true}, {"D", false}
        };
        crucigrama.currentCrucigrama = mockCrucigrama;

        // Mock de los TextFields y sus posiciones
        TextField textField1 = Mockito.mock(TextField.class);
        when(textField1.getText()).thenReturn("A");
        crucigrama.textFieldPositions.put(textField1, new int[]{0, 0});

        TextField textField2 = Mockito.mock(TextField.class);
        when(textField2.getText()).thenReturn("B");
        crucigrama.textFieldPositions.put(textField2, new int[]{0, 1});

        TextField textField3 = Mockito.mock(TextField.class);
        when(textField3.getText()).thenReturn("C");
        crucigrama.textFieldPositions.put(textField3, new int[]{0, 2});

        // Ejecutar el método a probar
        crucigrama.verificarRespuestas();

        // Verificar que todos los TextFields tengan el estilo adecuado
        verify(textField1).setStyle("-fx-background-color: lightgreen;");
        verify(textField2, never()).setStyle("-fx-background-color: lightgreen;");
        verify(textField3).setStyle("-fx-background-color: lightgreen;");
    }

    @Test
    public void testVerificarRespuestas_AlMenosUnaIncorrecta() {
        // Mock del objeto currentCrucigrama
        Object[][] mockCrucigrama = {
                {"A", true}, {"B", false}, {"C", true}, {"D", false}
        };
        crucigrama.currentCrucigrama = mockCrucigrama;

        // Mock de los TextFields y sus posiciones
        TextField textField1 = Mockito.mock(TextField.class);
        when(textField1.getText()).thenReturn("A");
        crucigrama.textFieldPositions.put(textField1, new int[]{0, 0});

        TextField textField2 = Mockito.mock(TextField.class);
        when(textField2.getText()).thenReturn("X"); // Respuesta incorrecta
        crucigrama.textFieldPositions.put(textField2, new int[]{0, 1});

        // Ejecutar el método a probar
        crucigrama.verificarRespuestas();

        // Verificar que el TextField con respuesta incorrecta tenga el estilo adecuado
        verify(textField2).setStyle("-fx-background-color: red;");
    }
}







//final//

